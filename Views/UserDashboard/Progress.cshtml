@model IEnumerable<UserProgress>

<div class="container mt-4">
    <h2>Your Learning Progress</h2>
    <div class="row">
        @foreach (var item in Model.GroupBy(p => p.Level.ProgrammingLanguage))
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5>@item.Key.Name</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var difficulty in item.GroupBy(p => p.Level.Difficulty))
                        {
                            <h6>@difficulty.Key.Name</h6>
                            <div class="progress mb-3">
                                @{
                                    var completed = difficulty.Count(p => p.IsCompleted);
                                    var total = difficulty.Count();
                                    var percentage = (completed * 100) / total;
                                }
                                <div class="progress-bar" role="progressbar"
                                     style="width: @percentage%"
                                     aria-valuenow="@percentage"
                                     aria-valuemin="0"
                                     aria-valuemax="100">
                                    @completed / @total Levels
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<style>
    .progress-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        padding: 1rem;
    }

    .progress-card {
        animation: fadeIn 0.5s ease-in-out;
    }

    .card {
        height: 100%;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    .difficulty-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .difficulty-name {
        color: #0f172a;
        margin: 0;
    }

    .completion-text {
        font-size: 0.875rem;
        color: #64748b;
    }

    .progress {
        height: 0.75rem;
        background-color: #e2e8f0;
        border-radius: 1rem;
        overflow: hidden;
    }

    .progress-bar {
        background: linear-gradient(135deg, #6366f1, #8b5cf6);
        transition: width 0.5s ease;
    }

    .activity-item {
        padding: 1rem;
        border-bottom: 1px solid #e2e8f0;
        transition: background-color 0.3s ease;
    }

    .activity-item:last-child {
        border-bottom: none;
    }

    .activity-item:hover {
        background-color: #f8fafc;
    }

    .activity-title {
        color: #0f172a;
        margin-bottom: 0.25rem;
    }

    .activity-info {
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .badge {
        font-weight: 500;
        padding: 0.35rem 0.75rem;
        border-radius: 2rem;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .progress-grid {
            grid-template-columns: 1fr;
        }
    }
</style>