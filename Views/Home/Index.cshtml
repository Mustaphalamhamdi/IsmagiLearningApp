@{
    ViewData["Title"] = "Home Page";
}

<div class="hero-section">
    <div class="row align-items-center">
        <div class="col-lg-6">
            <div class="hero-content">
                <h1 class="hero-title glitch" data-text="Master Coding">Master Coding</h1>
                <div class="hero-subtitle">Through Interactive Learning</div>
                <p class="hero-text">Experience a new way of learning to code. Write, run, and test real code directly in your browser with instant feedback and guidance.</p>
                <div class="hero-buttons">
                    <a href="/Identity/Account/Register" class="btn btn-primary">
                        Start Learning Now
                        <div class="btn-animation"></div>
                    </a>
                    <a href="#features" class="btn btn-outline">
                        Explore Features
                        <span class="btn-arrow">→</span>
                    </a>
                </div>
                <div class="stats-container">
                    <div class="stat-item">
                        <div class="stat-number">5000+</div>
                        <div class="stat-label">Active Learners</div>
                        <div class="stat-icon">
                            <lottie-player src="https://lottie.host/2a214912-af37-43b1-9c11-5c56b7b2a5b5/xkY7bQrWzf.json"
                                           background="transparent"
                                           speed="1"
                                           style="width: 40px; height: 40px;"
                                           loop
                                           autoplay>
                            </lottie-player>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number">100+</div>
                        <div class="stat-label">Interactive Lessons</div>
                        <div class="stat-icon">
                            <lottie-player src="https://lottie.host/c99e1404-c7e0-4120-9f8c-6a6a7f3b0a3e/AkbZcurUTQ.json"
                                           background="transparent"
                                           speed="1"
                                           style="width: 40px; height: 40px;"
                                           loop
                                           autoplay>
                            </lottie-player>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number">95%</div>
                        <div class="stat-label">Completion Rate</div>
                        <div class="stat-icon">
                            <lottie-player src="https://lottie.host/e5b89b63-4d7b-4e5d-a35d-9d5c2960ad9c/fYI5hQU5Yx.json"
                                           background="transparent"
                                           speed="1"
                                           style="width: 40px; height: 40px;"
                                           loop
                                           autoplay>
                            </lottie-player>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="code-editor">
                <div class="editor-header">
                    <div class="editor-buttons">
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                    <div class="editor-title">main.js</div>
                </div>
                <div class="editor-content">
                    <pre><code class="typing-code">function learnToCode() {
  const skills = ['HTML', 'CSS', 'JavaScript'];
  const dedication = 100;

  return skills.map(skill => {
    return Master ${skill};
  });
}</code></pre>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .hero-section {
        padding: 6rem 0;
        min-height: calc(100vh - 76px);
        display: flex;
        align-items: center;
    }

    .hero-content {
        max-width: 600px;
    }

    .hero-title {
        font-size: 4.5rem;
        font-weight: 800;
        line-height: 1.1;
        margin-bottom: 1rem;
        background: linear-gradient(135deg, #000000, #004791);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        position: relative;
    }

    .hero-subtitle {
        font-size: 2rem;
        color: var(--text-muted);
        margin-bottom: 1.5rem;
        font-weight: 500;
    }

    .hero-text {
        font-size: 1.25rem;
        color: var(--text-muted);
        line-height: 1.6;
        margin-bottom: 2rem;
    }

    .hero-buttons {
        display: flex;
        gap: 1rem;
        margin-bottom: 3rem;
    }

    .btn {
        padding: 0.875rem 1.75rem;
        font-weight: 500;
        border-radius: 0.5rem;
        transition: all 0.3s ease;
        font-size: 1.125rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-primary {
        background:#000000;
        color: white;
        border: none;
        position: relative;
        overflow: hidden;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.25);
        }

    .btn-animation {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient( 90deg, transparent, rgba(255, 255, 255, 0.2), transparent );
        animation: shine 3s infinite;
    }

    .btn-outline {
        border: 2px solid var(--border-color);
        background: transparent;
        color: var(--text-color);
    }

        .btn-outline:hover {
            border-color: #6366f1;
            color: #6366f1;
            transform: translateY(-2px);
        }

    .stats-container {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 2rem;
    }

    .stat-item {
        background: white;
        padding: 1.5rem;
        border-radius: 1rem;
        text-align: center;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(99, 102, 241, 0.1);
        transition: all 0.3s ease;
    }

        .stat-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(135deg, #000000, #000000);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        color: var(--text-muted);
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 1rem;
    }

    .code-editor {
        background: #1e1e1e;
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        margin-left: 2rem;
    }

    .editor-header {
        background: #2d2d2d;
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .editor-buttons {
        display: flex;
        gap: 0.5rem;
    }

        .editor-buttons span {
            width: 12px;
            height: 12px;
            border-radius: 50%;
        }

            .editor-buttons span:nth-child(1) {
                background: #ff5f56;
            }

            .editor-buttons span:nth-child(2) {
                background: #ffbd2e;
            }

            .editor-buttons span:nth-child(3) {
                background: #27c93f;
            }

    .editor-title {
        color: #8b8b8b;
        font-size: 0.875rem;
        font-family: 'SF Mono', monospace;
    }

    .editor-content {
        padding: 1.5rem;
    }

        .editor-content pre {
            margin: 0;
            color: #fff;
            font-family: 'SF Mono', monospace;
            font-size: 0.875rem;
            line-height: 1.6;
        }

    @@keyframes shine {
        from {
            transform: translateX(-100%);
        }

        to {
            transform: translateX(100%);
        }
    }

    @@media (max-width: 992px) {
        .hero-section {
            padding: 4rem 0;
            min-height: auto;
        }

        .hero-title {
            font-size: 3rem;
        }

        .hero-subtitle {
            font-size: 1.5rem;
        }

        .hero-text {
            font-size: 1.125rem;
        }

        .stats-container {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .code-editor {
            margin-left: 0;
            margin-top: 2rem;
        }
    }

    @@media (max-width: 576px) {
        .hero-section {
            padding: 3rem 0;
        }

        .hero-title {
            font-size: 2.5rem;
        }

        .hero-buttons {
            flex-direction: column;
        }

        .stats-container {
            grid-template-columns: 1fr;
        }

        .stat-number {
            font-size: 2rem;
        }
    }
</style>

<script>
    // Typing animation for code
    const codeElement = document.querySelector('.typing-code');
    if (codeElement) {
        const codeText = codeElement.textContent;
        codeElement.textContent = '';
        let i = 0;

        function typeCode() {
            if (i < codeText.length) {
                codeElement.textContent += codeText.charAt(i);
                i++;
                setTimeout(typeCode, 50);
            }
        }

        // Start typing after a short delay
        setTimeout(typeCode, 1000);
    }
</script>
