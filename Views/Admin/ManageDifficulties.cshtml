@model ProgrammingLanguage

<div class="difficulties-container mb-5">
    <div class="dashboard-header mb-4">
        <h2 class="dashboard-title">Manage Difficulty Levels</h2>
        <p class="dashboard-subtitle">@Model.Name Programming Language</p>
    </div>

    <div class="action-bar mb-4">
        <a asp-action="CreateDifficulty" 
           asp-route-languageId="@Model.Id"
           class="btn btn-create">
            Add New Difficulty Level
        </a>
    </div>

    <div class="difficulty-grid">
        @foreach (var difficulty in Model.DifficultyLevels.OrderBy(d => d.DisplayOrder))
        {
            <div class="difficulty-card">
                <div class="card-body">
                    <div class="difficulty-header">
                        <h5 class="difficulty-title">@difficulty.Name</h5>
                        <div class="form-check form-switch">
                            <input class="form-check-input" 
                                   type="checkbox"
                                   @(difficulty.IsAvailable ? "checked" : "")
                                   onchange="updateAvailability(@difficulty.Id, this.checked)">
                        </div>
                    </div>

                    <p class="difficulty-description">@difficulty.Description</p>
                    
                    <div class="difficulty-meta">
                        <span class="order-badge">Order: @difficulty.DisplayOrder</span>
                        <span class="status-badge @(difficulty.IsAvailable ? "available" : "unavailable")">
                            @(difficulty.IsAvailable ? "Available" : "Unavailable")
                        </span>
                    </div>

                    <div class="difficulty-actions">
                        <a asp-action="EditDifficulty" 
                           asp-route-id="@difficulty.Id"
                           class="btn btn-action">
                            Edit
                        </a>
                        <form asp-action="DeleteDifficulty" 
                              asp-route-id="@difficulty.Id" 
                              method="post" 
                              class="d-inline" 
                              onsubmit="return confirm('Are you sure you want to delete this difficulty level?');">
                            <button type="submit" class="btn btn-delete">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .difficulties-container {
        padding: 2rem 0;
        min-height: calc(100vh - 260px);
    }

    .dashboard-header {
        text-align: center;
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #6366f1, #8b5cf6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 1rem;
    }

    .dashboard-subtitle {
        font-size: 1.1rem;
        color: #64748b;
    }

    .action-bar {
        display: flex;
        justify-content: flex-end;
    }

    .btn-create {
        background: linear-gradient(135deg, #6366f1, #8b5cf6);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-create:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);
            color: white;
        }

    .difficulty-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .difficulty-card {
        background: white;
        border-radius: 1rem;
        border: 1px solid #e2e8f0;
        transition: all 0.3s ease;
    }

        .difficulty-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            border-color: #6366f1;
        }

    .card-body {
        padding: 1.5rem;
    }

    .difficulty-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .difficulty-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #0f172a;
        margin: 0;
    }

    .form-check-input {
        width: 3em;
        height: 1.5em;
        margin: 0;
    }

    .difficulty-description {
        color: #64748b;
        font-size: 0.95rem;
        margin-bottom: 1.5rem;
        line-height: 1.6;
    }

    .difficulty-meta {
        display: flex;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
    }

    .order-badge, .status-badge {
        padding: 0.35rem 0.75rem;
        border-radius: 2rem;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .order-badge {
        background: #f1f5f9;
        color: #64748b;
    }

    .status-badge.available {
        background: #dcfce7;
        color: #16a34a;
    }

    .status-badge.unavailable {
        background: #fee2e2;
        color: #ef4444;
    }

    .difficulty-actions {
        display: flex;
        gap: 0.75rem;
    }

    .btn-action, .btn-delete {
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        flex: 1;
    }

    .btn-action {
        border: 1px solid #e2e8f0;
        background: white;
        color: #64748b;
    }

        .btn-action:hover {
            border-color: #6366f1;
            color: #6366f1;
        }

    .btn-delete {
        border: 1px solid #fecaca;
        background: white;
        color: #ef4444;
    }

        .btn-delete:hover {
            background: #fef2f2;
            border-color: #ef4444;
        }

    /* Form Switch Custom Styling */
    .form-check-input {
        background-color: #e2e8f0;
        border-color: #e2e8f0;
    }

        .form-check-input:checked {
            background-color: #6366f1;
            border-color: #6366f1;
        }

    @@media (max-width: 768px) {
        .dashboard-title {
            font-size: 2rem;
        }

        .difficulty-grid {
            grid-template-columns: 1fr;
        }

        .difficulty-actions {
            flex-direction: column;
        }

        .btn-action, .btn-delete {
            width: 100%;
            text-align: center;
        }
    }
</style>


@section Scripts {
    <script>
        function updateAvailability(id, isAvailable) {
            fetch('/Admin/UpdateDifficultyAvailability', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ difficultyId: id, isAvailable: isAvailable })
            });
        }
    </script>
}